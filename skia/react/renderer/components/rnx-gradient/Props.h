
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsH.js
 */
#pragma once

#include <jsi/jsi.h>
#include <react/renderer/components/view/ViewProps.h>
#include <react/renderer/core/propsConversions.h>
#include <react/renderer/graphics/Color.h>
#include <vector>

#include "ReactSkia/views/common/RSkConversion.h"

namespace facebook {
namespace react {

struct LinearGradientViewStartStruct {
  Float x;
  Float y;
};

static inline void fromRawValue(const RawValue &value, LinearGradientViewStartStruct &result) {
  auto map = (better::map<std::string, RawValue>)value;
  auto tmp_x = map.find("x");
  if (tmp_x != map.end()) {
    fromRawValue(tmp_x->second, result.x);
  }
  auto tmp_y = map.find("y");
  if (tmp_y != map.end()) {
    fromRawValue(tmp_y->second, result.y);
  }
}

static inline std::string toString(const LinearGradientViewStartStruct &value) {
  return "[Object LinearGradientViewStartStruct]";
}

struct LinearGradientViewEndStruct {
  Float x;
  Float y;
};

static inline void fromRawValue(const RawValue &value, LinearGradientViewEndStruct &result) {
  auto map = (better::map<std::string, RawValue>)value;

  auto tmp_x = map.find("x");
  if (tmp_x != map.end()) {
    fromRawValue(tmp_x->second, result.x);
  }
  auto tmp_y = map.find("y");
  if (tmp_y != map.end()) {
    fromRawValue(tmp_y->second, result.y);
  }
}

static inline std::string toString(const LinearGradientViewEndStruct &value) {
  return "[Object LinearGradientViewEndStruct]";
}

struct LinearGradientViewAngleCenterStruct {
  Float x;
  Float y;
};

static inline void fromRawValue(const RawValue &value, LinearGradientViewAngleCenterStruct &result) {
  auto map = (better::map<std::string, RawValue>)value;

  auto tmp_x = map.find("x");
  if (tmp_x != map.end()) {
    fromRawValue(tmp_x->second, result.x);
  }
  auto tmp_y = map.find("y");
  if (tmp_y != map.end()) {
    fromRawValue(tmp_y->second, result.y);
  }
}

static inline std::string toString(const LinearGradientViewAngleCenterStruct &value) {
  return "[Object LinearGradientViewAngleCenterStruct]";
}
class JSI_EXPORT LinearGradientViewProps final : public ViewProps {
 public:
  LinearGradientViewProps() = default;
  LinearGradientViewProps(const LinearGradientViewProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  LinearGradientViewStartStruct start{};
  LinearGradientViewEndStruct end{};
  std::vector<SharedColor> colors{};
  std::vector<Float> locations{};
  bool useAngle{false};
  LinearGradientViewAngleCenterStruct angleCenter{0.5, 0.5};
  Float angle{45.0};
};

} // namespace react
} // namespace facebook
